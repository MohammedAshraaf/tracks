1
00:00:00,000 --> 00:00:00,610


2
00:00:00,610 --> 00:00:02,750
How many words can a
spell checker check?

3
00:00:02,750 --> 00:00:05,160
Well, let's find out with Speller.

4
00:00:05,160 --> 00:00:07,830
Let's dive right into
the distribution code.

5
00:00:07,830 --> 00:00:11,010
Speller.c will call load
on a dictionary file

6
00:00:11,010 --> 00:00:13,590
and put it by the user,
where the dictionary contains

7
00:00:13,590 --> 00:00:15,740
valid words, one per line.

8
00:00:15,740 --> 00:00:18,870
Then, it calls check on
each word in a text file

9
00:00:18,870 --> 00:00:22,100
that the user provided and prints
all of the misspelled words found

10
00:00:22,100 --> 00:00:23,190
in that file.

11
00:00:23,190 --> 00:00:27,650
Then, it calls size to determine the
number of words in the dictionary.

12
00:00:27,650 --> 00:00:31,300
And finally, calls unload to
free up all of the memory used

13
00:00:31,300 --> 00:00:33,930
while doing this process.

14
00:00:33,930 --> 00:00:37,690
Our job is to implement the
four functions in dictionary.c.

15
00:00:37,690 --> 00:00:42,130
Load, which loads the dictionary into
a data structure that we've created.

16
00:00:42,130 --> 00:00:45,100
Check, which then checks
that data structure to see

17
00:00:45,100 --> 00:00:47,640
if a given word is in the dictionary.

18
00:00:47,640 --> 00:00:50,800
Size, which returns the number
of words in the dictionary.

19
00:00:50,800 --> 00:00:55,200
And finally, unload, which frees
the dictionary from memory.

20
00:00:55,200 --> 00:00:56,539